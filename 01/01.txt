변수 처리
  -> return문 안에서 변수를 생성하거나 일반 스크립트를 작성할 수 없음
  -> return문 안에서 변수나 함수 사용시 {} 사용


함수, 이벤트 연동
  -> 객체의 속성 이벤트를 사용


State 변수
  -> 값이 변하면 화면이 바뀜
  -> 함수 import
     import useState //import React, { useState } from 'react'; 
  -> 선언
     let [name,setName] = useState('홍길동') //let name = '홍길동'
  -> 변경
     setName(e.target.innerText) //name = e.target.innerHTML
  -> State가 변경되면 화면을 다시 렌더링
  -> 렌더링이 다시 이루어진 후에 State 값이 변경됨


객체 찾기, useRef()
  -> JSX 문법이 실제 HTML로 렌더링 된 후에 객체를 찾을 수 있음
  -> 렌더링 된 후 실행되는 함수 (event fn)에서는 useRef 사용할 필요 없음
  -> Ref 선언
     const 객체 이름 = useRef() //객체를 찾을 때 이 이름을 사용하겠다
  -> Ref 연동
     <input ref={객체이름} />
  -> Ref 호출
     refEl.current.